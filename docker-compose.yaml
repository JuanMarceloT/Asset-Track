version: '3.9'

volumes:
  postgres_data: 

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: admin
      POSTGRES_USER: postgres
    ports:
      - "5432" 
    volumes:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  api:
    build: .
    ports:
      - "3330:3330"
    volumes:
      - ./controller/:/app/controller
      - ./repo/:/app/repo
      - ./utils/:/app/utils
      - ./services/:/app/services
      - /node_modules
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_HOST: db
      POSTGRES_USER: postgres
      RUN_MODE: ${RUN_MODE}
      EXTERNAL_SERVICES_URL: ${EXTERNAL_SERVICES_URL}
    depends_on:
      db:
        condition: service_healthy

  view:
    build: ./View
    volumes:
      - ./View:/app
      - /node_modules
    command: >
      sh -c "if [ \"$RUN_MODE\" = 'prod' ]; then
               npm install &&
               npm run build &&
               npx serve -s build;
             else
               npm install &&
               npm start;
             fi"
    environment:
      REACT_APP_RUN_MODE: ${RUN_MODE}
      REACT_APP_API_URL: ${API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - api
      - db

  external_services:
    build: ./external_services
    volumes:
      - ./external_services:/app
      - /venv
    command:  bash -c "pip install --no-cache-dir -r requirements.txt && python yahoo-api.py"
    expose:
      - "5000"
